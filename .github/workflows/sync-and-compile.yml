name: Sync ips and compile SRS

on:
  schedule:
    # 每6小时检查一次（北京时间：02:00、08:00、14:00、20:00）
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  sync_and_compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare directories
        run: mkdir -p ips upstream rules-src srs sb

      - name: Fetch repo1 ips branch
        run: git clone --depth 1 -b ips https://github.com/DustinWin/geoip.git upstream

      - name: Sync ips directory
        run: |
          rsync -av --delete --exclude=".git" upstream/ ips/
          git add ips
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "同步更新：从 DustinWin/geoip@ips 复制到 ips 目录" || true
          git pull --rebase origin main || true
          git push || true

      - name: Download and extract sing-box (fixed version)
        run: |
          SINGBOX_VERSION=1.10.0
          curl -L -o sing-box.tar.gz https://github.com/SagerNet/sing-box/releases/download/v${SINGBOX_VERSION}/sing-box-${SINGBOX_VERSION}-linux-amd64.tar.gz
          tar -xzf sing-box.tar.gz -C sb --strip-components=1
          chmod +x sb/sing-box
          ./sb/sing-box version

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc dos2unix flex bison file

      - name: Generate rule-set source JSON
        shell: bash
        run: |
          rm -rf rules-src srs
          mkdir -p rules-src srs

          normalize_file() {
            awk '
              {
                gsub(/\r/,"");
                gsub(/^[ \t]+|[ \t]+$/, "");
              }
              /^[ \t]*$/ { next }
              /^[#]/ { next }
              /^\/\// { next }
              { print $1 }
            ' "$1"
          }

          is_cidr_or_ip() {
            echo "$1" | grep -Eq '^([0-9]{1,3}\.){3}[0-9]{1,3}(/[0-9]{1,2})?$|^([0-9a-fA-F:]+)(/[0-9]{1,3})?$'
          }

          is_domain_plain() {
            echo "$1" | grep -Eq '^[A-Za-z0-9.-]+\.[A-Za-z0-9.-]+$'
          }

          find ips -type f \( -name "*.txt" -o -name "*.list" \) | while read -r SRC; do
            basename=$(basename "$SRC")
            name="${basename%.*}"

            tmp_ip="tmp_${name}_ip.txt"
            tmp_domain="tmp_${name}_domain.txt"
            : > "$tmp_ip"
            : > "$tmp_domain"

            normalize_file "$SRC" | while read -r line; do
              if is_cidr_or_ip "$line"; then
                echo "$line" >> "$tmp_ip"
              elif is_domain_plain "$line"; then
                echo "$line" >> "$tmp_domain"
              fi
            done

            if [ -s "$tmp_ip" ]; then
              echo '{"type":"ipcidr","content":[' > "rules-src/${name}.ip.json"
              awk 'NF{printf "\"%s\",", $0}' "$tmp_ip" | sed 's/,$//' >> "rules-src/${name}.ip.json"
              echo ']}' >> "rules-src/${name}.ip.json"
            fi

            if [ -s "$tmp_domain" ]; then
              echo '{"type":"domain","mode":"plain","content":[' > "rules-src/${name}.domain.json"
              awk 'NF{printf "\"%s\",", $0}' "$tmp_domain" | sed 's/,$//' >> "rules-src/${name}.domain.json"
              echo ']}' >> "rules-src/${name}.domain.json"
            fi

            rm -f "$tmp_ip" "$tmp_domain"
          done

      - name: Compile SRS files
        shell: bash
        run: |
          shopt -s nullglob
          for ipjson in rules-src/*.ip.json; do
            base=${ipjson%.ip.json}
            domainjson="${base}.domain.json"
            name=$(basename "$base")
            if [ -f "$domainjson" ]; then
              ./sb/sing-box rule-set compile "$ipjson" "$domainjson" -o "srs/${name}.srs"
            else
              ./sb/sing-box rule-set compile "$ipjson" -o "srs/${name}.srs"
            fi
          done
          for domainjson in rules-src/*.domain.json; do
            base=${domainjson%.domain.json}
            name=$(basename "$base")
            if [ ! -f "${base}.ip.json" ]; then
              ./sb/sing-box rule-set compile "$domainjson" -o "srs/${name}.srs"
            fi
          done

      - name: Commit results to repository
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -f srs || true
          git commit -m "自动编译更新 SRS" || true
          git pull --rebase origin main || true
          git push || true
