name: Sync and Compile Sing-Box Rules

on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:
  
permissions:
  contents: write

jobs:
  sync_and_compile:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Set up Git user
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Install sing-box (latest)
      run: |
        LATEST=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases/latest \
          | grep browser_download_url \
          | grep linux-amd64.tar.gz \
          | cut -d '"' -f 4)
        curl -Lo sing-box.tar.gz $LATEST
        tar -xzf sing-box.tar.gz
        chmod +x sing-box-*/sing-box
        sudo mv sing-box-*/sing-box /usr/local/bin/sing-box
        sing-box version

    - name: Fetch and Compile Sing-Box Rules from DustinWin/geoip
      run: |
        # 添加上游仓库
        git remote add upstream https://github.com/DustinWin/geoip || true
        git fetch upstream

        # 确保目标目录存在
        mkdir -p ips-new srs-new

        # 清空旧文件
        rm -rf ips-new/* srs-new/*

        # 检出 ips 分支下的所有文件到 ips-new
        git --work-tree=ips-new checkout upstream/ips -- .

        # 遍历 .list 文件，转换为 JSON（只处理 IP-CIDR，跳过 IP-ASN）
        for f in ips-new/*.list; do
          [ -f "$f" ] || continue
          if grep -q '^IP-ASN,' "$f"; then
            echo "Skipping $f (contains IP-ASN)"
            continue
          fi
          base=$(basename "$f" .list)
          json="ips-new/${base}.json"
          echo "Converting $f -> $json"
          {
            echo '{'
            echo '  "version": 2,'
            echo '  "rules": ['
            echo '    {'
            echo '      "ip_cidr": ['
            awk -F',' '/^IP-CIDR/ {print "        \"" $2 "\","}' "$f" | sed '$ s/,$//' 
            echo '      ]'
            echo '    }'
            echo '  ]'
            echo '}'
          } > "$json"
          rm -f "$f"
        done

        # 遍历 .txt 文件，转换为 JSON（每行一个 IP 段）
        for f in ips-new/*.txt; do
          [ -f "$f" ] || continue
          base=$(basename "$f" .txt)
          json="ips-new/${base}.json"
          echo "Converting $f -> $json"
          {
            echo '{'
            echo '  "version": 2,'
            echo '  "rules": ['
            echo '    {'
            echo '      "ip_cidr": ['
            awk '{print "        \"" $1 "\","}' "$f" | sed '$ s/,$//'
            echo '      ]'
            echo '    }'
            echo '  ]'
            echo '}'
          } > "$json"
          rm -f "$f"
        done

        # 遍历 ips-new 下的 json 文件并编译到 srs-new 目录
        for f in ips-new/*.json; do
          [ -f "$f" ] || continue
          base=$(basename "$f" .json)
          echo "Compiling: $f -> srs-new/${base}.srs"
          sing-box rule-set compile "$f" --output "srs-new/${base}.srs" || exit 1
        done

        # 提交更新
        git add ips-new srs-new
        if git diff-index --quiet HEAD --; then
          echo "No changes to commit"
        else
          git commit -m "Update sing-box rules from DustinWin/geoip (ips branch)"
          git push
        fi
